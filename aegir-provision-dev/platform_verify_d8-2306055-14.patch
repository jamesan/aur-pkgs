diff --git a/platform/drupal/packages_8.inc b/platform/drupal/packages_8.inc
index 01f66b7..9ac3cf9 100644
--- a/platform/drupal/packages_8.inc
+++ b/platform/drupal/packages_8.inc
@@ -4,6 +4,47 @@
  */
 
 /**
+ * Find themes in a certain scope
+ *
+ * This function is based on _system_theme_data in Drupal 6 and Drupal 7.
+ * We do not support, nor need information on subthemes at this point.
+ */
+function _provision_drupal_find_themes($scope, $key = '') {
+  $paths = _provision_drupal_search_paths($scope, $key, 'themes');
+  $files = array();
+  $engines = array();
+  foreach ($paths as $path) {
+    $files = array_merge($files, drush_scan_directory($path, "/\.info\.yml$/", array('.', '..', 'CVS', '.svn'), 0, true, 'name'));
+    $engines = array_merge($engines, drush_scan_directory($path . "/engines", "/\.engine$/", array('.', '..', 'CVS', '.svn'), 0, true, 'name'));
+  }
+  foreach ($files as $name => $file) {
+    $files[$name]->info = Symfony\Component\Yaml\Yaml::parse($file->filename);
+    if (!empty($files[$name]->info['name'])) {
+      $files[$name]->name = $files[$name]->info['name'];
+    }
+    // @TODO: This is copied from the D7 implementation and I'm almost certain
+    // that is doesn't even do anything in D7.
+    if (empty($files[$name]->info['engine'])) {
+      $filename = dirname($files[$name]->filename) .'/'. $files[$name]->name .'.theme';
+      if (file_exists($filename)) {
+        $files[$name]->owner = $filename;
+        $files[$name]->prefix = $name;
+      }
+    }
+    else {
+      $engine = $files[$name]->info['engine'];
+      if (isset($engines[$engine])) {
+        $files[$name]->owner = $engines[$engine]->filename;
+        $files[$name]->prefix = $engines[$engine]->name;
+        $files[$name]->template = TRUE;
+      }
+    }
+    _provision_cvs_deploy($files[$name]);
+  }
+  return $files;
+}
+
+/**
  * Map the system table to a packages multi-dimensional array component
  */
 function _provision_drupal_system_map() {
diff --git a/platform/verify.provision.inc b/platform/verify.provision.inc
index d7c2d29..afd6e2a 100644
--- a/platform/verify.provision.inc
+++ b/platform/verify.provision.inc
@@ -75,14 +75,22 @@ function drush_provision_drupal_pre_provision_verify() {
       ->succeed('Drupal sites directory @path is writable by the provisioning script')
       ->fail('Drupal sites directory @path is not writable by the provisioning script', 'PROVISION_SITES_DIR_NOT_WRITABLE');
 
-    drush_set_option('sites', array_keys((array) provision_drupal_find_sites()), 'drupal'); 
+    // Ensure sites.php file exists for Drupal 8 and above.
+    $sitesfile = "sites/sites.php";
+    if (drush_drupal_major_version() >= 8 && !file_exists($sitesfile)) {
+      if (!drush_op('copy', 'sites/example.sites.php', $sitesfile) && !drush_get_context('DRUSH_SIMULATE')) {
+        return drush_set_error(dt('Failed to copy sites/sites.php to @sitesfile', array('@sitesfile' => $sitesfile)));
+      }
+    }
+
+    drush_set_option('sites', array_keys((array) provision_drupal_find_sites()), 'drupal');
     drush_log(dt("This platform is running @short_name @version", array('@short_name' => 'drupal', '@version' => drush_drupal_version())));
     drush_set_option('packages', _scrub_object(provision_find_packages()), 'drupal');
     provision_drupal_push_site();
   }
   elseif (d()->type === 'site') {
     drush_set_option('packages', _scrub_object(provision_drupal_system_map()), 'site');
-    // This is the actual drupal provisioning requirements. 
+    // This is the actual drupal provisioning requirements.
     _provision_drupal_create_directories();
     _provision_drupal_maintain_aliases();
     _provision_drupal_ensure_htaccess_update();
